<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource buttonColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Foreground" Value="AliceBlue"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource buttonOverColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource titleColor1}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource buttonDisableColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MPanel" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="Width" Value="280"/>
        <Setter Property="MinHeight" Value="120" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0 0 15 15"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="5" CornerRadius="10">
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientStop Color="{DynamicResource scolor2}" Offset="0.2"/>
                                <GradientStop Color="{DynamicResource scolor5}" Offset="0.7"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <StackPanel Width="{TemplateBinding Width}" HorizontalAlignment="Left">
                            <TextBlock Foreground="{TemplateBinding Foreground}" Opacity="0.9" Text="{TemplateBinding Content}" FontSize="20"/>
                            <Separator Margin="0 2 0 5" HorizontalAlignment="Left" Height="1.2" Width="{TemplateBinding MinWidth}" Background="{DynamicResource titleColor2}"/>
                            <TextBlock Foreground="{TemplateBinding Foreground}" Margin="-10 0 0 0" Opacity="0.9" Width="270" TextWrapping="Wrap" FontSize="14" Text="{TemplateBinding  Tag}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.9"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SHButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="-26 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SystemButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="Foreground" Value="{DynamicResource textColor1}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource buttonOverColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource titleColor2}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource titleColor3}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="SystemCloseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="FontFamily" Value="Bahnschrift"/>
        <Setter Property="Foreground" Value="{DynamicResource textColor1}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0 9.5 0 0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource buttonOverColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource titleColor2}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource titleColor3}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddCountProduct" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="#212529"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0 5 5 0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeCountProduct" TargetType="Button">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="#212529"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5 0 0 5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>